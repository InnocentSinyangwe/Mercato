// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Category {
  GROCERY
  AUTO
  FOOD
  CLOTHES
}

model User {
  id           Int        @id @default(autoincrement())
  firstname    String
  lastname     String
  email        String     @unique
  password     String
  products     Product[]
  orders       Order[]
  chatInboxes  ChatInbox[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  quantity    Float
  price       Float
  available   Float
  sold        Float     @default(0)
  category    Category
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  userId      Int?
  user        User?     @relation(fields: [userId], references: [id])
  orders      Order[]
}

model Order {
  id          Int       @id @default(autoincrement())
  products    String[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  productId   Int?
  product     Product?  @relation(fields: [productId], references: [id])
  userId      Int?
  user        User?     @relation(fields: [userId], references: [id])
}

model ChatInbox {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  userId      Int?
  user        User?     @relation(fields: [userId], references: [id])
}
